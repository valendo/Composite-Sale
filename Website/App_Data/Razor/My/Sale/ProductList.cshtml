@inherits RazorFunction

@functions {
    public override string FunctionDescription
    {
        get { return "A demo function that outputs a hello message."; }
    }

    [FunctionParameter(DefaultValue = "World")]
    public string Name { get; set; }

    Guid PathInfoGuid(int segment)
    {
        string pathInfo = Composite.Core.Routing.Pages.C1PageRoute.GetPathInfo() ?? string.Empty;
        string[] segments = pathInfo.Split('/');
        Guid guidValue;
        Guid.TryParse(segments.Skip(segment + 1).FirstOrDefault(), out guidValue);
        return guidValue;
    }
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
</head>
<body>
    <div class="centerBoxWrapper" id="whatsNew">
		
        @{
            Composite.Core.Routing.Pages.C1PageRoute.RegisterPathInfoUsage();
            Guid CategoryId = PathInfoGuid(0);
            if (CategoryId != Guid.Empty)
            {
                string categoryName = Data.Get<My.Sale.Category>().Where(t => t.Id == CategoryId).FirstOrDefault().CategoryName;
                <h2 class="centerBoxHeading">@categoryName</h2>
                var products = Data.Get<My.Sale.Product>().Where(t => t.Category.Contains(CategoryId.ToString())).ToList();
                if (products.Count > 0)
                {
                    foreach (var item in products)
                    {
                        <div class="centerBoxContents">
                            <a href="#">
                                <img src="@Html.C1().MediaUrl(item.Image)" height="92" />
                            </a>
                            <br /> <a href="#">@item.Name</a> 
                            <br /> <span class="normalprice">@item.Price</span>
                        </div>
                        if ((products.IndexOf(item) + 1) % 3 == 0)
                        {
                            <br class="clearBoth" />
                        }
                    }
                }
            }
        }
    </div>
</body>
</html>
